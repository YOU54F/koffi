BUILD_TEST_TASK_TEMPLATE: &BUILD_TEST_TASK_TEMPLATE
  arch_check_script:
    - uname -am
  test_script: |
    script/download-libs.sh
    npm install
    node test.js

linux_amd64_task:  
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(linux\).*'
  env:
    matrix:
      - IMAGE: node:12-slim
      - IMAGE: node:14-slim
      - IMAGE: node:15-slim
      - IMAGE: node:16-slim
      - IMAGE: node:18-slim
      - IMAGE: node:19-slim
      - IMAGE: node:20-slim
  container:
    image: $IMAGE
    architecture: amd64
  install_script:
    - apt update --yes && apt install --yes curl
  << : *BUILD_TEST_TASK_TEMPLATE

linux_arm64_task: 
  only_if: $CIRRUS_CHANGE_TITLE =~ '.*\[ci(linux)\].*'
  env:
    matrix:
      - IMAGE: node:12-slim
      - IMAGE: node:14-slim
      - IMAGE: node:15-slim
      - IMAGE: node:16-slim
      - IMAGE: node:18-slim
      - IMAGE: node:19-slim
      - IMAGE: node:20-slim
  container:
    image: $IMAGE
    architecture: arm64
  install_script:
    - apt update --yes && apt install --yes curl
  << : *BUILD_TEST_TASK_TEMPLATE


mac_task:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(mac\).*'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    NVS_HOME: ${HOME}/.nvs
    PATH: ${NVS_HOME}:${PATH}
    # matrix:
    #   # - NODE_VERSION: 12
    #   # - NODE_VERSION: 14
    #   # - NODE_VERSION: 15
    #   # - NODE_VERSION: 16
    #   - NODE_VERSION: 20
    #   # - NODE_VERSION: 19
    #   # - NODE_VERSION: 20
  install nvm_script: |
    git clone https://github.com/jasongin/nvs "$NVS_HOME"
    . "$NVS_HOME/nvs.sh" install
  download_ffi_script: |
    chmod u+x script/**/*.sh
    chmod u+x script/*.sh
    script/download-libs.sh
  # test_node_12_script: |
  #   rm -rf node_modules
  #   . "$NVS_HOME/nvs.sh"
  #   nvs add 12
  #   nvs use 12
  #   file $(which node) | grep -e 'arm64'
  #   node --version
  #   npm install
  #   node test.js
  # test_node_14_script: |
  #   rm -rf node_modules
  #   . "$NVS_HOME/nvs.sh"
  #   nvs add 14
  #   nvs use 14
  #   file $(which node) | grep -e 'arm64'
  #   node --version
  #   npm install
  #   node test.js
  # test_node_15_script: |
  #   rm -rf node_modules
  #   . "$NVS_HOME/nvs.sh"
  #   nvs add 15
  #   nvs use 15
  #   file $(which node) | grep -e 'arm64'
  #   node --version
  #   npm install
  #   node test.js
  test_node_16_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 16
    nvs use 16
    file $(which node) | grep -e 'arm64'
    node --version
    npm install
    node test.js
  test_node_18_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 18
    nvs use 18
    file $(which node) | grep -e 'arm64'
    node --version
    npm install
    node test.js
  test_node_19_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 19
    nvs use 19
    file $(which node) | grep -e 'arm64'
    node --version
    npm install
    node test.js
  test_node_20_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 20
    nvs use 20
    file $(which node) | grep -e 'arm64'
    node --version
    npm install
    node test.js
  install_rosetta_script: softwareupdate --install-rosetta --agree-to-license
  test_node_12_x64_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 12/x64
    nvs use 12/x64
    file $(which node) | grep -e 'x64'
    node --version
    npm install
    arch -x86_64 node test.js
  test_node_14_x64_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 14/x64
    nvs use 14/x64
    file $(which node) | grep -e 'x64'
    node --version
    npm install
    arch -x86_64 node test.js
  test_node_15_x64_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 15/x64
    nvs use 15/x64
    file $(which node) | grep -e 'x64'
    node --version
    npm install
    arch -x86_64 node test.js
  test_node_16_x64_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 16/x64
    nvs use 16/x64
    file $(which node) | grep -e 'x64'
    node --version
    npm install
    arch -x86_64 node test.js
  test_node_18_x64_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 18/x64
    nvs use 18/x64
    file $(which node) | grep -e 'x64'
    node --version
    npm install
    arch -x86_64 node test.js
  test_node_19_x64_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 19/x64
    nvs use 19/x64
    file $(which node) | grep -e 'x64'
    node --version
    npm install
    arch -x86_64 node test.js
  test_node_20_x64_script: |
    rm -rf node_modules
    . "$NVS_HOME/nvs.sh"
    nvs add 20/x64
    nvs use 20/x64
    file $(which node) | grep -e 'x64'
    node --version
    npm install
    arch -x86_64 node test.js


windows_task:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(win\).*'
  windows_container:
    image: cirrusci/windowsservercore:2019
  env:
    CIRRUS_SHELL: powershell
    PATH:  C:\ProgramData\chocolatey\bin:${PATH}
    matrix:
      # - NODE_VERSION: 12
      # - NODE_VERSION: 14
      # - NODE_VERSION: 15
      - NODE_VERSION: 16
      # - NODE_VERSION: 18
      # - NODE_VERSION: 19
      # - NODE_VERSION: 20
  install_script: |
    choco install --yes nvs
    refreshenv
    nvs add 16
    nvs use 16
    node --version
  << : *BUILD_TEST_TASK_TEMPLATE

freebsd_task:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(freebsd\).*'
  freebsd_instance:
    image_family: freebsd-13-0
  env:
    NVS_HOME: ${HOME}/.nvs
    matrix:
      # - NODE_VERSION: 12
      # - NODE_VERSION: 14
      # - NODE_VERSION: 15
      - NODE_VERSION: 16
      # - NODE_VERSION: 18
      # - NODE_VERSION: 19
      # - NODE_VERSION: 20
  install_script: |
    pkg update --yes && pkg upgrade --yes 
    pkg install --yes curl git
    git clone https://github.com/jasongin/nvs "$NVS_HOME"
    . "$NVS_HOME/nvs.sh" install
    nvs add ${NODE_VERSION}
    nvs use ${NODE_VERSION}
    node --version
  << : *BUILD_TEST_TASK_TEMPLATE



